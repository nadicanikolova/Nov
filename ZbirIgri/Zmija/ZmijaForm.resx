<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="nova.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="zatvori.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhfAAjAIU/AAAVFQAiIgAxMQBBQQBOTgBaWgBkZAB0dAB8fACHhwCIiACXlwCbmwqdnRKengGj
        owuhoQCurgqtrROkpBulpRKrqxirqwCwsAuxsRKzsxy2th+4uCOqqiqqqiK2tiu0tCK4uCu5uTGysj2w
        sDW8vDu+vkK0tEu2tkK/v0y6ulO5uVy9vWK/v0XBwUzCwlPExFvGxmPGxmrFxWbIyGzKynTGxnjHx3TL
        y3vNzX7Q0IPOzorPz4PR0Y3R0ZHS0gAAACH/C05FVFNDQVBFMi4wAwEBAAAh+QQFAAA/ACwAAAAAfAAj
        AAAI/wB/CBxIsKDBgwgTKlzIsKHDhwsLHFCQoKLFixgxUtyooKNHjwk+iuwYcuTIkhxFVqRYMqTLjxkt
        kgyJoIAAhxMXMNjJYAKHDh04CKVAlMKECQ4mQFgKoYFTnjob8JxKtarVq1itSn3AQKpTphCUHnXgwKoC
        AwEWGqDaQIWNHXDjxtWBAwddGzZq1LhRQ4ZfGSxYxGCxAsaLFSoSJ07B+ESKE5AjS5bMmLGKyolXaIax
        IrBgwTJmyNBLugbeunV11GDRgYFOnTsLLDywc4FtBzp8yO3RYwdvH8CDCx9OvLhx4D2OK1+uPLkP5z5s
        OLBNfYGB2bWpq9Cxg7vcuDzg8v8Iv4MH7/G8z/cwn9z8+Ofs06tPD/95cue/7dvPDx06cuPJySBVdQxc
        pxBtrlHXgAkslHbDgxBGKGFdN+Bwgw0WWnhDDhxWiNqHqOVQl4gfkpgaDhyKOB6HPOgw3osrwijjeN3t
        QAMH2dlWoFo5UkeBCSoUFgMMQxYZw5FIJonkDEw26SQNTUIZJZM0QFnllVhmqeWWNNyApZdedtmlly9Y
        wNVUOhmYEILV6fgABR+UgEIKLtRp5wsu4KnnC3jmWeeefAYq6KCEFmrYC4ciqigMjB5qWKOQRsqoCx9I
        8MClUKWJXZs6XXqpBBVoAAIJpJZq6qklpKrqqqyqioKcKLz/WkKpIYAAggYZ4JrBrrtqoMEGtoYQQqmx
        otDCsci24AKyLqBAwgYSRPCAtJjWtqNCayVIHU+eShvBBRLw6usG5JJrKwjmolsusOeeW66uGWAg7wUX
        RGDvvfbSiy++9V4gr7y9jrsurhjUe6+nZ7p27Zo9bnWpt/zqG0HB/hb878UYz2sxvf1y/K3HBn/MscH9
        ivytyCODLLG901IL1cIIHbAtbDt1e2/KOOes88489+yzzx/j6ylVasbMac023/zz0kw37XTKQrtsbdEH
        yaztVEmj/PTWQGvNdcgHV8sT1QbR9hrNCEf89dps97wvxEMrTHZBZm/Lbcv7tq333jgf/yy13LOdrSMD
        COOdL9+I680ytWLDXHV21mbtdeKUOx11444blC2BSE/bcseVh9600GJreqC2NBP+sNKitw402H+bznCC
        CqueNOiu59532JjPTZDZtHf+tu7E7y404VPziHrnq+vb9uTF63yytwhP5ftAMrd5N8QRn9z3yErzezju
        YJcM8vhBm487yjeTXnrmdBMIW9pv19/+8NPnrza4+Itvf76Hsx/s9vW+6wnEapzrnAQkALBdYSBeGaDX
        vKL1vwqSzF8MBNgDecXBDnqQVw20mAQ8RsDqJe908uuJBUQgJxekQFB56lOflrUsZBVrViRQFalalaxj
        1ZCGyvJhEP9r2ENj9bAFxipWrHD4ARBYYIRxO+HstNWBFdjARTPKYou0yEUY6SAHMMrBF1OEAx6wqC5m
        RJEaTYQaD4HoQ27MkJdgkAIOnGlwBvxBAWBDHRPIAC8YqksgbVAhCUFIBny5wWiq1Jcq/eWRfomBDCRJ
        yUlCUgY0+MuVMCmmB+3FkBR6I4e+6B0cxIAC1toJARhiAAQooE1kiSVYZrmUBzDFllyBwJlsiTxdciWX
        Q/OULm3XAEwJU3W1tKUvabkUCYTlKNCsQFGMAgGF2UYBCCAAAB4ikQN48wAG+KY4D4CAb5ZznOT0ZjnP
        eU5zovOd42wnPNUpTnbCU57wNMAAIMIXz376858ADahAB0rQghr0oAhNqEINEhAAOw==
</value>
  </data>
</root>